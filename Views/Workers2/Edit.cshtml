@model TimeTask.Models.Workers2
@using Newtonsoft.Json

@{
    ViewData["Title"] = "Edit";
}

<link rel="stylesheet" href="~/css/site_form.css" asp-append-version="true" />

<div class="parent">
    <section class="left-nav">
        @Html.Partial("_Menu")
    </section>
    
    <section class="right-nav right-nav-forms">
        <form asp-action="Edit" class="form_2">
            @*<div asp-validation-summary="ModelOnly" class="text-danger"></div>*@
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <input asp-for="Name" class="form-control" />
            </div>
            <div class="form-group">
                <input asp-for="Surname" class="form-control" />
            </div>
            <div class="form-group form-group-margin">
                <input asp-for="DepartmentID" class="form-control" id="eh3l65gbmt94" hidden/>
                <select asp-for="DepartmentID" id="pprtmqifroub" class="form-control form-select uxgwrznm185b" onchange="wy07gj8jq8xq(this)"></select>
            </div>
            <div class="form-group form-check" hidden>
                <label class="form-check-label">
                    @* <input class="form-check-input" asp-for="Employed" /> @Html.DisplayNameFor(model => model.Employed) *@
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="@Resource.Edit" class="btn-custom" />
            </div>
            <div class="form-group">
                <a asp-area="" asp-controller="Home" asp-action="Index"><input value="Wróć" type="button" class="btn-custom_" /></a>
            </div>
        </form>
        <form asp-action="Delete" class="jbiihcodqinw">
            <input type="hidden" asp-for="Id" />
            @*<input type="submit" value="Delete" class="btn btn-danger" /> |
            <a asp-action="Index">Back to List</a>*@
            <span id="deleteText">@Resource.ClickBelowToDeleteWorker.</span>
            <input type="button" value="@Resource.Delete" class="btn-danger-custom" id="deleteID" onclick="IWantToDeleteDepartment(this)" />
            <div class="btn-danger-div">
                <input type="submit" value="Tak" id="yes"/>
            </div>
        </form>

    </section>

</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script src="~/js/site.js" asp-append-version="true"></script>

<script type="text/javascript">

    var model_d = @Html.Raw(JsonConvert.SerializeObject(ViewBag.Department));
    //var model_w = @Html.Raw(JsonConvert.SerializeObject(ViewBag.Workers));

    sortArray(model_d);

    let pprtmqifroub = document.getElementById("pprtmqifroub");
    for (let i = 0; i < model_d.length; i++) {
        pprtmqifroub.innerHTML += '<option value=' + model_d[i].Id + '>' + model_d[i].Name + '</option>';
    }
    for (let i = 0; i < model_d.length; i++) {
        if(model_d[i].Id == document.getElementById('eh3l65gbmt94').value){
            pprtmqifroub.value = model_d[i].Id;
        }
    }

    function wy07gj8jq8xq(t) {
        let hiddenValue = document.getElementById('eh3l65gbmt94');
        hiddenValue.value = t.value;
    };



    if (model_d.length == 0)
    {
        let buttons = document.querySelectorAll("button");
        for (let i = 0; i < buttons.length; i++)
        {
            buttons[i].setAttribute('disabled', '');
        }
    }
    else 
    {
        let buttons = document.querySelectorAll(".departments button");
        for (let i = 0; i < buttons.length; i++)
        {
            buttons[i].setAttribute('disabled', '');
        }
    }

    function hideA() 
    {
        let a = document.querySelectorAll(".departments__ a");
        for (let i = 0; i < a.length; i++)
        {
            a[i].style.display = 'none';
        }

        let b = document.querySelector(".btn-danger-div");
        b.style.display = 'none';
    };
    hideA();

    function IWantToDeleteDepartment(t)
    {
        document.getElementById("deleteText").innerHTML = '@Resource.AreYouSureYouWantToDeleteWorker';

        let a = document.querySelector(".btn-danger-div");
        a.style.display = '';
        t.style.display = 'none';

        /*timer*/
        let count = 9;
        document.getElementById("yes").value = '@Resource.Yes' + ' ' + '(' + 10 + ')';
        setInterval(function() {
            if (count > 0) {
                document.getElementById("yes").value = '@Resource.Yes' + ' ' + '(' + count + ')';
                count--;
            }
            else {
                document.getElementById("yes").value = '@Resource.Yes';
            }
        }, 1000);

        document.getElementById("yes").setAttribute('disabled', '');
        setTimeout(function() {
            document.getElementById("yes").removeAttribute('disabled');
        }, 10000);
        /**/
    };


    if(localStorage.length > 0){
        if(localStorage.getItem("opened") != null){
            let id = localStorage.getItem("opened")

            let departA1 = document.querySelectorAll(".departments__a");
            let departA2 = document.querySelectorAll(".departments__a2");
            let departA3 = document.querySelectorAll(".departments__a3");

            let d = document.querySelectorAll(".departments__ button");
            let d_svgPath = document.querySelectorAll(".departments__ button svg path");
            for(let i = 0; i < d.length; i++){
                if(d[i].getAttribute('id') == id){
                    d_svgPath[i].setAttribute('d', 'm572.501 747-254.933 815.893-101.867-31.786 278.507-890.774h1105.813v-320H783.808L612.181 107H.021v1546.667c0 88.213 71.787 160 160 160h1388.054c75.946 0 141.973-54.08 156.906-128.64L1892.608 747H572.501Z');
                    d[i].setAttribute('opened', '');
                    for(let j = 0; j < departA1.length; j++){
                        if(departA1[j].getAttribute("id") == id){
                            departA1[j].style.display = ''; departA1[j].style.opacity = '0.6'; departA1[j].style.pointerEvents = 'none';
                        }
                    }
                    for(let j = 0; j < departA2.length; j++){
                        if(departA2[j].getAttribute("id") == id){
                            departA2[j].style.display = ''; departA2[j].style.opacity = '0.6'; departA2[j].style.pointerEvents = 'none';
                        }
                    }
                    for(let j = 0; j < departA3.length; j++){
                        if(departA3[j].getAttribute("id") == id){
                            departA3[j].style.display = ''; departA3[j].style.opacity = '0.6'; departA3[j].style.pointerEvents = 'none';
                        }
                    }
                }
            }
        }

        if(localStorage.getItem('opened2') != null){
            let id = localStorage.getItem("opened2")

            let departA2 = document.querySelectorAll(".departments__a2");
            let departWorker = document.querySelectorAll('.departments__worker');
            for(let i = 0; i < departA2.length; i++){
                if(departA2[i].getAttribute('id') == id){
                    let svg = departA2[i].querySelectorAll('svg path');
                    for(let j = 0; j < svg.length; j++){
                        svg[j].setAttribute('d', 'm572.501 747-254.933 815.893-101.867-31.786 278.507-890.774h1105.813v-320H783.808L612.181 107H.021v1546.667c0 88.213 71.787 160 160 160h1388.054c75.946 0 141.973-54.08 156.906-128.64L1892.608 747H572.501Z');
                    }
                    departA2[i].setAttribute('opened', '');
                }
            }
            for(let i = 0; i < departWorker.length; i++){
                if(departWorker[i].getAttribute('id') == id){
                    departWorker[i].style.display = '';
                    departWorker[i].style.opacity = '0.6'; departWorker[i].style.pointerEvents = 'none';
                }
            }
        }

    }

</script>